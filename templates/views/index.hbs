<!DOCTYPE html>

<html>

<head>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
    <link rel="stylesheet" href="/css/styles.css">
    <span class="glyphicon glyphicon-search" aria-hidden="true"></span>
    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>

</head>

<body>
    
    <h1>Synchronous Player for Youtube</h1>
    
    <!-- 1. The <iframe> (and video player) will replace this <div> tag. -->
    <script>
      $(document).ready(function() {
        setInterval(function() {
          var currentTime = player.getCurrentTime();
          //console.log('Current time:' + currentTime)
          var duration = player.getDuration();
          var currentFraction = currentTime/duration
          var sqLocation = currentFraction*650
          //console.log(sqLocation)
          $('#square').css('position', 'relative')
          $('#square').css("left", sqLocation);
        }, 200);
      });
    </script>
    
    <script>
      $(document).ready(function(){
        $('#line').click(function(e) {
          
          var divOffset = $('#line').offset();
          console.log('divOffset: '+divOffset.left)
          
          var position = e.pageX;
          console.log('position: ' + position)
          var timeLocation = position - divOffset.left
          var fraction = timeLocation / 650
          console.log('fraction: ' + fraction)
          console.log('duration: ' + player.getDuration())
          var duration = player.getDuration();
          console.log('time: ' + fraction * duration)
          //var y = e.pageY;
          $('#square').css('position', 'relative');
          $('#square').css("left", timeLocation);
          player.seekTo(fraction*duration, true);
          //$('#square').css("top", y);
        })
        
        //$('#line').mousemove(function (event) {
        //    var x = event.pageX
        //    console.log(x)
        //})
        
        //$('#line').click(function(){
        //  var x = $(this).offset();
        //  var relativeX = $('#square').offset()
        //  var lengthPlayed = relativeX.left - x.left
        //  var fraction = lengthPlayed / 650
          //console.log(fraction)
        //  console.log("Top: " + x.top + " Left: " + x.left);
          //console.log("Top relativeX: " + relativeX.top + " Left relativeX: " + relativeX.left)
          //$('#square').css("margin-left", "80px");
        //});
      });
    </script>

    <script src="/socket.io/socket.io.js"></script>
    <script src="/js/socket.io.js"> </script>
    <script>
      var socket = io();
      $(document).ready(function(){
        $('#playVideo').click(function(e){
          data = {state: 'play', time: player.getCurrentTime()}
          socket.emit('playEvent', data)
          socket.on('play', function(msg) {
            if(msg.state = 'play') {
              player.seekTo(msg.time, true)
              player.playVideo();
              console.log('client will:'  + msg.state)
            }
          //console.log('client will:'  + msg.state)
          })
        })
        $('#pauseVideo').click(function(e){
          data = {state: 'pause', time: player.getCurrentTime()}
          socket.emit('pauseEvent', data)
          socket.on('pause', function(msg) {
            if(msg.state = 'pause') {
              player.seekTo(msg.time, true)
              player.pauseVideo();
              console.log('client will:'  + msg.state)
            }
            //console.log('client will:'  + msg.state)
          })
        })
        $('#line').click(function(e){
          var divOffset = $('#line').offset();
          var position = e.pageX;
          var timeLocation = position - divOffset.left
          var fraction = timeLocation / 650
          var duration = player.getDuration();
          //$('#square').css('position', 'relative');
          //$('#square').css("left", timeLocation);
          //player.seekTo(fraction*duration, true);
          var time = fraction * duration
          data = {state: 'seek', time: time}
          socket.emit('seekEvent', data)
          socket.on('seek', function(msg) {
            if(msg.state = 'seek') {
              player.seekTo(msg.time, true);
              console.log('client will:'  + msg.state)
            }
            //console.log('client will:'  + msg.state)
          })
        })
        
        socket.emit('hello to server')
        socket.on('hello to client', function() {
          console.log('recieved hello from server')
        })
        
        /*
        socket.on('event', function() {
          console.log('Server to Client Works')
        })
        */

        /*
        socket.on('playerEvent', function(msg){
          console.log('Reached')
          if(msg.state = 'play') {
            console.log('here')
            player.playVideo();
          } else if (msg.state = 'pause') {
            console.log('hi')
            player.pauseVideo();
          } else if (msg.state = 'seek') {
            console.log('hey')
            player.seekTo(msg.time, true);
          }
        })
        */
        
        
      });
      
  </script>
    
    <div id="player"></div>
    <div id="controls">
      <div class = "btn-group" style="float:left;">
          <button id="playVideo" type="button" class="btn btn-success" onclick="player.playVideo()"><span class="glyphicon glyphicon-play"></span></button>
          <button id="pauseVideo" type="button" class="btn btn-danger" onclick="player.pauseVideo()"><span class="glyphicon glyphicon-pause"></span></button>
      </div>
      <div id ="progressBar">
          <div id="line"></div>
          <div id="square"></div>
      </div>
    </div>

    <p>Created by Colin K</p>


    <script>
      // 2. This code loads the IFrame Player API code asynchronously.
      var tag = document.createElement('script');

      tag.src = "https://www.youtube.com/iframe_api";
      var firstScriptTag = document.getElementsByTagName('script')[0];
      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

      // 3. This function creates an <iframe> (and YouTube player)
      //    after the API code downloads.
      var player;
      function onYouTubeIframeAPIReady() {
        player = new YT.Player('player', {
          height: '480',
          width: '720',
          videoId: 'fB8TyLTD7EE',
          events: {
            'onReady': onPlayerReady,
            'onStateChange': onPlayerStateChange,
          },
          playerVars: {
            'diablekb': 1,
            'controls': 0,
            'modestbranding': 1,
            'rel':0,
            'showinfo':0
          }
        });
      }

      // 4. The API will call this function when the video player is ready.
      function onPlayerReady(event) {
        event.target.playVideo();  
      }

      // 5. The API calls this function when the player's state changes.
      //    The function indicates that when playing a video (state=1),
      //    the player should play for six seconds and then stop.
      var done = false;
      function onPlayerStateChange(event) {
        //console.log(event.data)
        //if (event.data == YT.PlayerState.PLAYING && !done) {
        //  setTimeout(stopVideo, 6000);
        //  done = true;
        //}
      }
      function stopVideo() {
        player.stopVideo();
      }
    </script>
    

</body>



</html>